name: ci
on: push
env:
  CARGO_TERM_COLOR: always
  SCARB_VERSION: 2.12.2
jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.88.0
        with:
          components: clippy, rustfmt
      - name: Format
        working-directory: ./server
        run: cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.88.0
        with:
          components: clippy, rustfmt
      - name: Clippy
        working-directory: ./server
        run: cargo clippy
      - name: Check for diff
        working-directory: ./server
        run: git diff --exit-code

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@1.88.0
        with:
          components: clippy, rustfmt
      - name: Build
        working-directory: ./server
        run: cargo build --verbose

  test:
    runs-on: ubuntu-latest
    needs: [build-cairo]
    steps:
      - uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2

      # This puts Katana in the path for integration tests.
      - name: Download Katana for integration tests
        run: |
          curl -L https://github.com/dojoengine/katana/releases/download/v1.7.0-alpha.4/katana_v1.7.0-alpha.4_linux_amd64.tar.gz -o katana.tar.gz;
          tar -C /usr/local/bin -xzf katana.tar.gz
      - uses: actions/download-artifact@v4
        with:
          name: cairo-artifacts
          path: ./target/dev

      - name: Run tests
        working-directory: ./server
        run: cargo test --workspace --verbose

  check-cairo:
    runs-on: ubuntu-latest
    name: Check cartridge-vrf format
    steps:
      - uses: actions/checkout@v4
      - uses: software-mansion/setup-scarb@v1
        with:
          scarb-version: ${{ env.SCARB_VERSION }}
      - name: Format
        run: scarb fmt --check

  build-cairo:
    needs: check-cairo
    runs-on: ubuntu-latest
    name: Build cartridge-vrf
    steps:
      - uses: actions/checkout@v4
      - uses: software-mansion/setup-scarb@v1
        with:
          scarb-version: ${{ env.SCARB_VERSION }}
      - name: Build
        run: scarb build

      - uses: actions/upload-artifact@v4
        with:
          name: cairo-artifacts
          path: ./target/dev

  test-cairo:
    needs: [check-cairo, build-cairo]
    runs-on: ubuntu-latest
    name: Test cartridge-vrf
    steps:
      - uses: actions/checkout@v4
      - uses: software-mansion/setup-scarb@v1
        with:
          scarb-version: ${{ env.SCARB_VERSION }}
      - uses: foundry-rs/setup-snfoundry@v3
      - name: Test
        run: snforge test
